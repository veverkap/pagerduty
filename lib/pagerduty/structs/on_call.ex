defmodule PagerDuty.Oncall do
  @moduledoc ~S"""
  An on-call represents a contiguous unit of time for which
  a [user](#resource_Users) will be on call for a given [escalation
  policy](#resource_Escalation_Policies) and [escalation
  rule](#!/Escalation_Policies/get_escalation_policies_id_escalation_rules).

  This may be the result of that [user](#resource_Users) always being on call
  for the [escalation
  rule](#!/Escalation_Policies/get_escalation_policies_id_escalation_rules),
  or a block of time during which the computed result of
  a [schedule](#resource_Schedules) on that [escalation
  rule](#!/Escalation_Policies/get_escalation_policies_id_escalation_rules)
  puts the user on call.



  During an on-call, the [user](#resource_Users) is expected to bear
  responsibility for responding to any
  [notifications](#resource_Notifications) he or she receives and working to
  resolve the associated [incident(s)](#resource_Incidents).



  On-calls cannot be created directly through the API; they are the computed
  result of how [escalation policies](#resource_Escalation_Policies) and
  [schedules](#resource_Schedules) are configured.

  The API provides read-only access to the on-calls generated by PagerDuty.

  ## Attributes
    * `@escalation_policy`: The escalation policy for the on-call.
    * `@user`: The user for the on-call.
    * `@schedule`: The schedule for the on-call.
    * `@escalation_level`: The escalation level for the on-call.
    * `@start`: The start of the on-call. If `null`, the on-call is a permanent user on-call.
    * `@end`: The end of the on-call. If `null`, the user does not go off-call.
  """
  defstruct escalation_policy: nil, user: nil, schedule: nil, escalation_level: nil, start: nil, end: nil
  @type t :: %__MODULE__{
    escalation_policy: String.t,
    user: String.t,
    schedule: String.t,
    escalation_level: integer,
    start: String.t,
    end: String.t
  }
end